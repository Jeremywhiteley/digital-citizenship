swagger: '2.0'
info:
  version: 0.0.1
  title: Notification API
  description: Notification API.
host: localhost
basePath: /api/v1
schemes:
  - https
paths:
  '/messages/{id}':
    parameters:
      - name: id
        in: path
        type: string
        required: true
    get:
      operationId: getMessage
      summary: Get Message
      description: Returns a previously submitted message.
      responses:
        '200':
          description: Message found.
          schema:
            $ref: '#/definitions/AcceptedMessage'
        '404':
          description: No message found.
  '/users/{fiscal_number}/messages':
    parameters:
      - name: fiscal_number
        in: path
        type: string
        required: true
        description: The fiscal number of the user.
        pattern: >-
          [A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]
        maxLength: 16
        minLength: 1
      - $ref: '#/parameters/PaginationRequest'
    get:
      operationId: getMessagesByUser
      summary: Get messages by user
      description: |-
        Returns the submitted messages the have the user as destination.
        Messages will be returned in inverse delivery order (from last to first)
      responses:
        '200':
          description: Found.
          schema:
            allOf:
              - type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/AcceptedMessage'
              - $ref: '#/definitions/PaginationResponse'
          examples: {}
        '404':
          description: No user found.
      parameters: []
  /messages:
    post:
      operationId: submitMessage
      summary: Submit Message
      description: Submits a message for delivery to a user.
      parameters:
        - name: message
          in: body
          schema:
            $ref: '#/definitions/MessageDefinition'
      responses:
        '201':
          description: Message accepted for delivery.
          schema:
            allOf:
              - properties:
                  id:
                    type: string
                    format: uuid
                  status:
                    $ref: '#/definitions/MessageStatus'
                required:
                  - id
                  - status
            description: ''
            type: object
          headers:
            Location:
              type: string
              description: >-
                Location (URL) of accepted message resource.

                A GET request to this URL returns the message status and
                details.
definitions:
  ProblemJson:
    title: Problem Type
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: 'about:blank'
        example: 'https://example.com/problem/constraint-violation'
      title:
        type: string
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: >
          The HTTP status code generated by the origin server for this
          occurrence

          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 503
      detail:
        type: string
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
      instance:
        type: string
        format: uri
        description: >-
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
  MessageContent:
    title: MessageContent
    type: object
    properties:
      body_short:
        type: string
        description: Message content (short version).
        minLength: 3
        maxLength: 100
      body_long:
        type: string
        description: Message content (long version).
        minLength: 3
    required:
      - body_short
  MessageDefinition:
    title: MessageDefinition
    type: object
    properties:
      to:
        description: The fiscal code of the destination user.
        type: string
      dry_run:
        type: boolean
        description: >-
          This parameter, when set to true, allows developers to test a request
          without actually sending a message.


          The default value is false.
      time_to_live:
        type: integer
        description: >-
          This parameter specifies how long (in seconds) the message should be
          kept in storage if the device is offline. The maximum time to live
          supported is 1 year, and the default value is 1 hour.
        minimum: 3600
        maximum: 31536000
      content:
        $ref: '#/definitions/MessageContent'
    required:
      - to
      - content
  MessageStatus:
    title: MessageStatus
    type: object
    properties:
      status:
        type: string
        description: |
          ACCEPTED: the message has been accepted for delivery

          SENT: the message was delivered to the channel

          FAILED: something wong happened, check the error code and message

          TIMED_OUT:  in case a TTL was set
        x-extensible-enum:
          - ACCEPTED
          - SENT
          - TIMED_OUT
          - FAILED
      failed_at:
        type: string
        format: date-time
      sent_at:
        type: string
        format: date-time
      problem:
        $ref: '#/definitions/ProblemJson'
  AcceptedMessage:
    title: AcceptedMessage
    allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
          accepted_at:
            type: string
            format: date-time
          status:
            type: object
            default: {}
            properties:
              mail:
                $ref: '#/definitions/MessageStatus'
              sms:
                $ref: '#/definitions/MessageStatus'
              browser:
                $ref: '#/definitions/MessageStatus'
              push:
                $ref: '#/definitions/MessageStatus'
        required:
          - id
      - $ref: '#/definitions/MessageDefinition'
  PaginationResponse:
    type: object
    title: pagination
    description: Pagination response parameters (HATEOAS version).
    properties:
      index:
        type: integer
        minimum: 0
        description: The index of the first item returned in the collection.
      page_size:
        type: integer
        minimum: 1
        description: Number of items returned for each page.
      first:
        type: string
      next:
        type: string
      prev:
        type: string
      last:
        type: string
      self:
        type: string
responses: {}
parameters:
  PaginationRequest:
    name: cursor
    in: query
    type: string
    minimum: 1
    description: An opaque identifier that points to the next item in the  collection.
