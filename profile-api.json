{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "Preferences",
    "description": "The API lets you manage attributes associated with users (user preferences).\nYou can get any attribute for any user (read only) according to the rights you owe on the user resource. \nThere rights are set up at moment you've subscribed the service exposed by this API.",
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The key of the user to query. The user must be in the organization domain",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "get": {
        "operationId": "getUser",
        "summary": "Get User",
        "tags": [
          "Users"
        ],
        "description": "Retrieve one user's preferences (ie. email and/or preferred language).",
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "x-stoplight": {
          "id": "getUser",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "statusCode": 200,
            "dynamic": false,
            "enabled": false
          }
        }
      }
    }
  },
  "definitions": {
    "UserDefinition": {
      "title": "UserDefinition",
      "description": "Describes a user",
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The user's fiscal number.",
          "x-faker": "internet.userName"
        },
        "emails": {
          "type": "array",
          "description": "An email collection associated with a user. \n\nThere MUST be only one item marked primary.",
          "items": {
            "$ref": "#/definitions/Email"
          }
        },
        "preferredLanguage": {
          "type": "string",
          "description": "Indicates the User's preferred written or spoken language. Generally used for selecting a localized User interface. Valid values are concatenation of the ISO 639-1 two letter language code, an underscore, and the ISO 3166-1 2 letter country code; e.g., 'en_US' specifies the language English and country US."
        }
      },
      "required": [
        "userName"
      ],
      "x-stoplight": {
        "id": "UserDefinition",
        "name": "UserDefinition",
        "public": true
      }
    },
    "User": {
      "title": "User",
      "description": "Describes a user belonging to an organization",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The user's unique key",
              "format": "uuid"
            }
          },
          "required": [
            "id"
          ]
        },
        {
          "$ref": "#/definitions/UserDefinition"
        }
      ],
      "x-stoplight": {
        "id": "User",
        "name": "User",
        "public": true
      }
    },
    "Email": {
      "title": "Email",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-faker": "lorem.word",
          "description": "A label indicating the attribute's function; e.g., \"work\" or \"home\"."
        },
        "primary": {
          "type": "boolean",
          "default": false,
          "description": "A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred mailing address or primary e-mail address. The primary attribute value 'true' MUST appear no more than once."
        },
        "value": {
          "type": "string",
          "format": "email",
          "x-faker": "internet.email",
          "description": "The attribute's significant value; e.g., the e-mail address."
        }
      },
      "required": [
        "value"
      ],
      "x-stoplight": {
        "id": "Email",
        "name": "Email",
        "public": true
      }
    }
  },
  "x-stoplight": {
    "beforeScript": "",
    "afterScript": "",
    "version": {
      "groups": {
        "utilFuncs": [],
        "savedEntries": [],
        "tests": [],
        "traits": [],
        "docs": [
          {
            "name": "Users",
            "description": null,
            "divider": null,
            "items": [
              {
                "_id": "getUser",
                "type": "endpoints"
              },
              {
                "_id": "woazyCxwjhiEEH343",
                "type": "endpoints"
              }
            ]
          },
          {
            "name": "Models",
            "description": "Models make up the core input and ouput structures in this API. They are used in endpoint request and response bodies.",
            "divider": null,
            "items": [
              {
                "_id": "UserDefinition",
                "type": "schemas"
              },
              {
                "_id": "TZ4JkFptD4WtAFSbr",
                "type": "schemas"
              },
              {
                "_id": "hYqQyvRs8ruiXLobq",
                "type": "schemas"
              },
              {
                "_id": "UserCollection",
                "type": "schemas"
              },
              {
                "_id": "w7wL4JCqFPBYXqpjd",
                "type": "schemas"
              },
              {
                "_id": "QNYGbPukNvurz76my",
                "type": "schemas"
              },
              {
                "_id": "User",
                "type": "schemas"
              },
              {
                "_id": "Email",
                "type": "schemas"
              }
            ]
          },
          {
            "name": "Traits",
            "description": "Traits describe common behaviors or structures in this API.",
            "divider": null,
            "items": []
          }
        ]
      }
    },
    "functions": {},
    "textSections": {},
    "mock": {
      "enabled": false,
      "dynamic": false
    }
  },
  "x-tests": {}
}
